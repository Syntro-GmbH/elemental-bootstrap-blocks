{"version":3,"file":"bundle.js","mappings":"AAuDAA,OAAOC,QAlDP,WACE,MAAMC,EAAOC,SAASC,uBAAuB,gBAC7C,GAAIF,EAAKG,OAAS,EAChB,MAAO,IAAIC,MAAM,+FAEnB,MAAM,OAAEC,GAAWP,OACnB,IAAK,IAAIQ,EAAI,EAAGA,EAAIN,EAAKG,OAAQG,GAAK,EAAG,CACvC,MAAMC,EAAWP,EAAKM,GAChBE,EAASC,KAAKC,MAAMH,EAASI,QAAQH,QACrCI,EAAaH,KAAKC,MAAMH,EAASI,QAAQC,YAEzCC,EAAS,IAAIR,EAAOL,KAAKc,aAEzBC,EAAkBP,EAAOL,OAAS,EAAIK,EAAO,GAAK,CAAEQ,IAAK,EAAGC,IAAK,GACjEC,EAAM,IAAIb,EAAOL,KAAKmB,IAC1BZ,EAAU,CAAEa,OAAQL,EAAiBM,KAAMT,EAAWS,KAAMC,OAAQV,EAAWU,SAGjF,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAOL,OAAQoB,GAAK,EAAG,CACzC,MAAMC,EAAY,IAAInB,EAAOL,KAAKyB,OAAO,CACvCC,SAAUlB,EAAOe,GACjBL,IAAAA,IAEF,GAAIV,EAAOe,GAAGI,KAAM,CAClB,MAAMC,EAAa,IAAIvB,EAAOL,KAAK6B,WAAW,CAC5CC,QAASC,mBAAmBvB,EAAOe,GAAGI,QAExCH,EAAUQ,YAAY,SAAS,KAC7BJ,EAAWK,KAAK,CACdC,OAAQV,EACRN,IAAAA,EACAiB,aAAa,OAGb3B,EAAOe,GAAGa,UACZR,EAAWK,KAAK,CACdC,OAAQV,EACRN,IAAAA,EACAiB,aAAa,IAInBtB,EAAOwB,OAAOb,EAAUc,eAGtB1B,EAAW2B,KAAO/B,EAAOL,OAAS,GACpCe,EAAIsB,UAAU3B","sources":["webpack:///./client/src/mapblock/bundle.js"],"sourcesContent":["/* eslint-env browser */\n\n/**\n * initMap - initializes all maps on the page\n */\nfunction initMap() {\n  const maps = document.getElementsByClassName('mapblock-map');\n  if (maps.length < 1) {\n    throw (new Error('No map found to initialize. Add the class  \\'mapblock-map \\' to the node you want to init on.'));\n  }\n  const { google } = window;\n  for (let i = 0; i < maps.length; i += 1) {\n    const mapBlock = maps[i];\n    const marker = JSON.parse(mapBlock.dataset.marker);\n    const mapoptions = JSON.parse(mapBlock.dataset.mapoptions);\n\n    const bounds = new google.maps.LatLngBounds();\n\n    const initialPosition = marker.length > 0 ? marker[0] : { lat: 0, lng: 0 };\n    const map = new google.maps.Map(\n      mapBlock, { center: initialPosition, zoom: mapoptions.zoom, styles: mapoptions.styles },\n    );\n\n    for (let j = 0; j < marker.length; j += 1) {\n      const newMarker = new google.maps.Marker({\n        position: marker[j],\n        map,\n      });\n      if (marker[j].info) {\n        const infowindow = new google.maps.InfoWindow({\n          content: decodeURIComponent(marker[j].info),\n        });\n        newMarker.addListener('click', () => {\n          infowindow.open({\n            anchor: newMarker,\n            map,\n            shouldFocus: false,\n          });\n        });\n        if (marker[j].showInfo) {\n          infowindow.open({\n            anchor: newMarker,\n            map,\n            shouldFocus: false,\n          });\n        }\n      }\n      bounds.extend(newMarker.getPosition());\n    }\n\n    if (mapoptions.fit && marker.length > 1) {\n      map.fitBounds(bounds);\n    }\n  }\n}\nwindow.initMap = initMap;\n"],"names":["window","initMap","maps","document","getElementsByClassName","length","Error","google","i","mapBlock","marker","JSON","parse","dataset","mapoptions","bounds","LatLngBounds","initialPosition","lat","lng","map","Map","center","zoom","styles","j","newMarker","Marker","position","info","infowindow","InfoWindow","content","decodeURIComponent","addListener","open","anchor","shouldFocus","showInfo","extend","getPosition","fit","fitBounds"],"sourceRoot":""}